[{"C:\\Users\\OBINNA\\Documents\\fcc-frontend-projects\\twentyfive-plus-five-clock-app\\src\\index.js":"1","C:\\Users\\OBINNA\\Documents\\fcc-frontend-projects\\twentyfive-plus-five-clock-app\\src\\App.js":"2","C:\\Users\\OBINNA\\Documents\\fcc-frontend-projects\\twentyfive-plus-five-clock-app\\src\\reportWebVitals.js":"3","C:\\Users\\OBINNA\\Documents\\fcc-frontend-projects\\twentyfive-plus-five-clock-app\\src\\components\\TimerControls.js":"4","C:\\Users\\OBINNA\\Documents\\fcc-frontend-projects\\twentyfive-plus-five-clock-app\\src\\components\\TimerDisplay.js":"5","C:\\Users\\OBINNA\\Documents\\fcc-frontend-projects\\twentyfive-plus-five-clock-app\\src\\components\\TimerLengths.js":"6"},{"size":500,"mtime":1606330639199,"results":"7","hashOfConfig":"8"},{"size":9322,"mtime":1606344290821,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1606212110001,"results":"10","hashOfConfig":"8"},{"size":437,"mtime":1606321950454,"results":"11","hashOfConfig":"8"},{"size":329,"mtime":1606245271664,"results":"12","hashOfConfig":"8"},{"size":1016,"mtime":1606242950811,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"o0elpj",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"C:\\Users\\OBINNA\\Documents\\fcc-frontend-projects\\twentyfive-plus-five-clock-app\\src\\index.js",[],["29","30"],"C:\\Users\\OBINNA\\Documents\\fcc-frontend-projects\\twentyfive-plus-five-clock-app\\src\\App.js",["31"],"\n\nimport React, { Component } from 'react'\nimport TimerControls from './components/TimerControls'\nimport TimerDisplay from './components/TimerDisplay'\nimport TimerLengths from './components/TimerLengths'\n\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state ={\n      sessionLength: 1500,\n      breakLength: 300,\n      displayMessage: \"Session\",\n      timerSession: 1500,\n      //timer: 1500,\n      timerBreak: 300,\n      minutes: 25,\n      seconds: \"00\"\n    }\n\n    this.timer= 0;\n    this.runningFlag = false;\n    this.playAudio= this.playAudio.bind(this);\n    this.pauseAudio = this.pauseAudio.bind(this);\n    this.startStopTimer= this.startStopTimer.bind(this);\n    this.countDown= this.countDown.bind(this);\n    this.resetTime= this.resetTime.bind(this);\n    this.incBreak= this.incBreak.bind(this);\n    this.decBreak= this.decBreak.bind(this);\n    this.incSession= this.incSession.bind(this);\n    this.decSession= this.decSession.bind(this);\n    //this.minCalc= this.minCalc.bind(this);\n    //this.secCalc= this.secCalc.bind(this);\n    this.minuteCalcSession= this.minuteCalcSession.bind(this);\n    this.secondCalcSession= this.secondCalcSession.bind(this);\n    this.minuteCalcBreak= this.minuteCalcBreak.bind(this);\n    this.secondCalcBreak= this.secondCalcBreak.bind(this);\n  }\n\n  incSession(){\n    //var minutes2 = parseInt(this.state.minutes);\n    if(this.state.sessionLength < 3600){\n      if((this.runningFlag === false) && this.state.displayMessage === \"Session\"){\n        if((this.state.sessionLength + 60)/60 < 10){\n          this.setState({\n            //minutes: parseInt(this.state.minutes) + 1,\n            minutes: \"0\" + (this.state.sessionLength + 60)/60,\n            seconds: \"00\",\n            sessionLength: this.state.sessionLength + 60,\n            timerSession: this.state.sessionLength + 60\n          });\n        }else{\n          this.setState({\n            //minutes: parseInt(this.state.minutes) + 1,\n            minutes: (this.state.sessionLength + 60)/60,\n            seconds: \"00\",\n            sessionLength: this.state.sessionLength + 60,\n            timerSession: this.state.sessionLength + 60\n          });\n        }\n        \n        //this.minuteCalcSession();\n        //console.log(\"after inc, this.state.minutes is \" + this.state.minutes);\n        //console.log(\"after inc, this.state.sessionLength is \" + this.state.sessionLength);\n        //console.log(\"after inc, this.state.timerSession is \" + this.state.timerSession);\n\n      }else if(this.runningFlag === false && this.state.displayMessage === \"Break\"){\n        this.setState({\n          sessionLength: this.state.sessionLength + 60\n        });\n      }\n    }\n  }\n\n  decSession(){\n    //var minutes2 = parseInt(this.state.minutes);\n    if(this.state.sessionLength > 60){\n      if(this.runningFlag === false && this.state.displayMessage === \"Session\"){\n        if((this.state.sessionLength - 60)/60 < 10){\n          this.setState({\n            //minutes: parseInt(this.state.minutes) - 1,\n            minutes:\"0\" + (this.state.sessionLength - 60)/60,\n            seconds: \"00\",\n            sessionLength: this.state.sessionLength - 60,\n            timerSession: this.state.sessionLength - 60\n          });\n\n        }else{\n          this.setState({\n            //minutes: parseInt(this.state.minutes) - 1,\n            minutes:(this.state.sessionLength - 60)/60,\n            seconds: \"00\",\n            sessionLength: this.state.sessionLength - 60,\n            timerSession: this.state.sessionLength - 60\n          });\n        }\n        \n        //this.minuteCalcSession();\n      }else if(this.runningFlag === false && this.state.displayMessage === \"Break\"){\n        this.setState({\n          sessionLength: this.state.sessionLength - 60\n        });\n      }\n    }\n  }\n\n  incBreak(){\n    //var minutes2 = parseInt(this.state.minutes);\n    if(this.state.breakLength < 3600){\n      if(this.runningFlag === false && this.state.displayMessage === \"Break\"){\n        if((this.state.breakLength + 60)/60 < 10){\n          this.setState({\n            minutes:\"0\" + (this.state.breakLength + 60)/60,\n            //minutes: minutes2 + 1,\n            seconds: \"00\",\n            breakLength: this.state.breakLength + 60,\n            timerBreak: this.state.breakLength + 60\n          });\n        }else{\n          this.setState({\n            minutes: (this.state.breakLength + 60)/60,\n            //minutes: minutes2 + 1,\n            seconds: \"00\",\n            breakLength: this.state.breakLength + 60,\n            timerBreak: this.state.breakLength + 60\n          });\n        }\n        \n        //this.minuteCalcBreak();\n      }else if(this.runningFlag === false  && this.state.displayMessage === \"Session\"){\n        this.setState({\n          breakLength: this.state.breakLength + 60\n        });\n        \n      }\n    }\n  }\n\n  decBreak(){\n    //var minutes2 = parseInt(this.state.minutes);\n    if(this.state.breakLength > 60){\n      if(this.runningFlag=== false  && this.state.displayMessage === \"Break\"){\n        if((this.state.breakLength - 60)/60 < 10){\n          this.setState({\n            minutes:\"0\" + (this.state.breakLength - 60)/60,\n            //minutes: minutes2 - 1,\n            seconds: \"00\",\n            breakLength: this.state.breakLength - 60,\n            timerBreak: this.state.breakLength - 60\n          });\n        }else{\n          this.setState({\n            minutes: (this.state.breakLength - 60)/60,\n            //minutes: minutes2 - 1,\n            seconds: \"00\",\n            breakLength: this.state.breakLength - 60,\n            timerBreak: this.state.breakLength - 60\n          });\n        }\n        \n          //this.minuteCalcBreak();\n\n      }else if(this.runningFlag === false && this.state.displayMessage === \"Session\"){\n        this.setState({\n          breakLength: this.state.breakLength - 60\n        });\n        \n      }\n    }\n  }\n\n  playAudio(){\n   var audio= document.getElementById(\"beep\");\n    audio.play();\n }\n\n pauseAudio(){\n    var audio= document.getElementById(\"beep\");\n    audio.pause();\n    audio.load();\n }\n\n resetTime(){\n   this.setState({\n     sessionLength: 1500,\n     breakLength: 300,\n     displayMessage: \"Session\",\n     timerSession: 1500,\n     //timer: 1500,\n     timerBreak: 300,\n     minutes: 25,\n     seconds: \"00\"\n   });\n   clearInterval(this.timer);\n   this.timer= 0;\n   this.runningFlag= false;\n   this.pauseAudio();\n   \n }\n\n minuteCalcSession(){\n   var minutes2= Math.floor(this.state.timerSession/ 60);\n   if(minutes2 < 10){\n     minutes2= \"0\" + minutes2;\n   }\n   this.setState({\n     minutes: minutes2\n   });\n }\n\n secondCalcSession(){\n   var seconds2=  this.state.timerSession % 60;\n   if(seconds2 < 10){\n     seconds2 = \"0\" + seconds2;\n   }\n   this.setState({\n     seconds: seconds2\n   });\n }\n\n minuteCalcBreak(){\n   var minutes2= Math.floor(this.state.timerBreak / 60);\n   if(minutes2 < 10){\n     minutes2= \"0\" + minutes2;\n   }\n   this.setState({\n     minutes: minutes2\n   });\n }\n\n  secondCalcBreak(){\n   var seconds2=  this.state.timerBreak % 60;\n   if(seconds2 < 10){\n     seconds2 = \"0\" + seconds2;\n   }\n   this.setState({\n     seconds: seconds2\n   });\n }\n\n countDown(){\n   if(this.state.timerSession > 0 && this.state.displayMessage === \"Session\"){\n     this.setState({\n       timerSession: this.state.timerSession - 1\n     });\n     //this.minCalc();\n     //this.secCalc();\n     this.minuteCalcSession();\n     this.secondCalcSession();\n\n   }else if(this.state.timerBreak > 0 && this.state.displayMessage === \"Break\"){\n     this.setState({\n       timerBreak: this.state.timerBreak - 1\n     });\n     //this.minCalc();\n     //this.secCalc();\n     this.minuteCalcBreak();\n     this.secondCalcBreak();\n\n   }else if(this.state.timerSession === 0 && this.state.displayMessage === \"Session\"){\n     this.setState({\n       timerbreak: this.state.breakLength,\n       displayMessage: \"Break\"\n     });\n     this.minuteCalcBreak();\n     this.secondCalcBreak();\n     //this.minCalc();\n     //this.secCalc();\n     this.playAudio();\n\n   }else if(this.state.timerBreak === 0 && this.state.displayMessage === \"Break\"){\n     this.setState({\n       timerSession: this.state.sessionLength,\n       displayMessage: \"Session\"\n     });\n     this.minuteCalcSession();\n     this.secondCalcSession();\n     //this.minCalc();\n     //this.secCalc();\n     this.playAudio();\n   }\n }\n\n startStopTimer(){\n   if(!this.runningFlag){\n     this.runningFlag= true;\n     this.timer = setInterval(() => {\n       this.countDown()\n     }, 1000);\n\n   }else if(this.runningFlag){\n     clearInterval(this.timer);\n     this.runningFlag= false;\n   }\n }\n\n  \n\n  render() {\n    return (\n      <div className=\"container\">\n          <div className= \"title\"><h1>25 + 5 Clock</h1></div>\n          <TimerLengths  incBreak ={this.incBreak} decBreak= {this.decBreak} incSession={this.incSession} decSession={this.decSession} breakLength={this.state.breakLength/60}  sessionLength={this.state.sessionLength/60}/>\n          <TimerDisplay displayMessage= {this.state.displayMessage} minutes={this.state.minutes} seconds={this.state.seconds}/>\n          <TimerControls startStopTimer={this.startStopTimer} resetTime={this.resetTime}/>\n          <audio id=\"beep\" src=\"https://res.cloudinary.com/dqwagsh1g/video/upload/v1602008165/Beep_Pomodoro_App_enwb21.m4a\" ></audio>\n      </div>\n    )\n  }\n}\n\nexport default App\n","C:\\Users\\OBINNA\\Documents\\fcc-frontend-projects\\twentyfive-plus-five-clock-app\\src\\reportWebVitals.js",[],"C:\\Users\\OBINNA\\Documents\\fcc-frontend-projects\\twentyfive-plus-five-clock-app\\src\\components\\TimerControls.js",[],"C:\\Users\\OBINNA\\Documents\\fcc-frontend-projects\\twentyfive-plus-five-clock-app\\src\\components\\TimerDisplay.js",[],"C:\\Users\\OBINNA\\Documents\\fcc-frontend-projects\\twentyfive-plus-five-clock-app\\src\\components\\TimerLengths.js",[],["32","33"],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":142,"column":9,"nodeType":"40","messageId":"41","endLine":142,"endColumn":17},{"ruleId":"34","replacedBy":"42"},{"ruleId":"36","replacedBy":"43"},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"no-unused-vars","'minutes2' is assigned a value but never used.","Identifier","unusedVar",["44"],["45"],"no-global-assign","no-unsafe-negation"]